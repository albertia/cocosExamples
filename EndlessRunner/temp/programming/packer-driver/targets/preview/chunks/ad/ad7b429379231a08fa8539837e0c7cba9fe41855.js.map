{"version":3,"sources":["file:///Users/alex/git/cocos/EndlessRunner/assets/scripts/Platform-001.ts"],"names":["_decorator","Component","Vec3","Prefab","instantiate","Sprite","UITransform","BoxCollider2D","ccclass","property","Platform","start","update","deltaTime","node","position","x","platformSpeed","y","init","createPosition","totalWidth","width","height","i","tilesCount","tile","addChild","getComponent","collider","size","offset","name","apply"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,a,OAAAA,a;;;;;;;;;OAChF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;0BAGjBU,Q,WADZF,OAAO,CAAC,UAAD,C,UAEHC,QAAQ,CAACN,MAAD,C,2BAFb,MACaO,QADb,SAC8BT,SAD9B,CACwC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAUpCU,QAAAA,KAAK,GAAG,CACP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKC,IAAL,CAAUC,QAAV,GAAqB,IAAIb,IAAJ,CAAS,KAAKY,IAAL,CAAUC,QAAV,CAAmBC,CAAnB,GAAqBH,SAAS,GAAC,KAAKI,aAA7C,EAA4D,KAAKH,IAAL,CAAUC,QAAV,CAAmBG,CAA/E,EAAiF,CAAjF,CAArB;AACH;;AAEKC,QAAAA,IAAI,GAAG;AACT,eAAKL,IAAL,CAAUC,QAAV,GAAqB,KAAKK,cAA1B;AACA,cAAIC,UAAiB,GAAG,CAAxB;AACA,cAAIC,KAAY,GAAG,CAAnB;AACA,cAAIC,MAAa,GAAG,CAApB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,UAAzB,EAAqC,EAAED,CAAvC,EAA0C;AACtC,gBAAME,IAAI,GAAGtB,WAAW,CAAC,KAAKsB,IAAN,CAAxB;AACA,iBAAKZ,IAAL,CAAUa,QAAV,CAAmBD,IAAnB;AACAJ,YAAAA,KAAK,GAAGI,IAAI,CAACE,YAAL,CAAkBvB,MAAlB,EAA0BS,IAA1B,CAA+Bc,YAA/B,CAA4CtB,WAA5C,EAAyDgB,KAAjE;AACAC,YAAAA,MAAM,GAAGG,IAAI,CAACE,YAAL,CAAkBvB,MAAlB,EAA0BS,IAA1B,CAA+Bc,YAA/B,CAA4CtB,WAA5C,EAAyDiB,MAAlE;AACAG,YAAAA,IAAI,CAACX,QAAL,GAAgB,IAAIb,IAAJ,CAASsB,CAAC,GAAGF,KAAb,EAAoB,CAApB,EAAuB,CAAvB,CAAhB;AACAD,YAAAA,UAAU,IAAIC,KAAd;AACH;;AAED,cAAIO,QAAQ,GAAG,KAAKf,IAAL,CAAUc,YAAV,CAAuBrB,aAAvB,CAAf;AACAsB,UAAAA,QAAQ,CAACC,IAAT,CAAcd,CAAd,GAAkBK,UAAlB;AACAQ,UAAAA,QAAQ,CAACC,IAAT,CAAcZ,CAAd,GAAkBK,MAAlB;AACAM,UAAAA,QAAQ,CAACE,MAAT,CAAgBf,CAAhB,GAAoBK,UAAU,GAAC,CAAX,GAAeC,KAAK,GAAC,CAAzC;AACAO,UAAAA,QAAQ,CAACG,IAAT,GAAgB,UAAhB;AACAH,UAAAA,QAAQ,CAACI,KAAT;AACH;;AArCmC,O;;;;;iBAEtB,I;;yFACbxB,Q;;;;;iBAC4B,IAAIP,IAAJ,CAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,C;;qFAC5BO,Q;;;;;iBAC0B,C;;wFAC1BA,Q;;;;;iBAC6B,G","sourcesContent":["import { _decorator, Component, Node, Vec3, Prefab, instantiate, Sprite, UITransform, BoxCollider2D} from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Platform')\nexport class Platform extends Component {\n    @property(Prefab)\n    public tile = null;\n    @property\n    public createPosition:Vec3 = new Vec3(0.0, 0.0, 0.0);\n    @property\n    public tilesCount:number = 3;\n    @property\n    public platformSpeed:number = 175;\n\n    start() {\n    }\n\n    update(deltaTime: number) {\n        this.node.position = new Vec3(this.node.position.x-deltaTime*this.platformSpeed, this.node.position.y,0); \n    }\n\n   public init() {\n        this.node.position = this.createPosition;\n        var totalWidth:number = 0;\n        var width:number = 0;\n        var height:number = 0;\n        for (let i = 0; i < this.tilesCount; ++i)Â {\n            const tile = instantiate(this.tile);\n            this.node.addChild(tile);\n            width = tile.getComponent(Sprite).node.getComponent(UITransform).width;\n            height = tile.getComponent(Sprite).node.getComponent(UITransform).height;\n            tile.position = new Vec3(i * width, 0, 0)\n            totalWidth += width;\n        }\n\n        var collider = this.node.getComponent(BoxCollider2D);\n        collider.size.x = totalWidth;\n        collider.size.y = height;\n        collider.offset.x = totalWidth/2 - width/2;\n        collider.name = 'platform'\n        collider.apply();\n    }\n}\n\n"]}