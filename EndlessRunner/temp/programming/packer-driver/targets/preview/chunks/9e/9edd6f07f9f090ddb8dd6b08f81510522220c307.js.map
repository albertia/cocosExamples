{"version":3,"sources":["file:///Users/alex/git/cocos/EndlessRunner/assets/scripts/Game.ts"],"names":["_decorator","Component","EPhysics2DDrawFlags","Node","PhysicsSystem2D","RichText","ccclass","property","Game","score","start","instance","debugDrawFlags","Aabb","Pair","CenterOfMass","Joint","Shape","scoreNodeComponent","scoreNode","getComponent","hero","on","string","toString","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,mB,OAAAA,mB;AAAqBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,e,OAAAA,e;AAAiBC,MAAAA,Q,OAAAA,Q;;;;;;;;;OACtE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;sBAGjBQ,I,WADZF,OAAO,CAAC,MAAD,C,UAIHC,QAAQ,CAACJ,IAAD,C,UAERI,QAAQ,CAACJ,IAAD,C,2BANb,MACaK,IADb,SAC0BP,SAD1B,CACoC;AAAA;AAAA;AAAA,eACzBQ,KADyB,GACV,CADU;;AAAA;;AAAA;AAAA;;AAQhCC,QAAAA,KAAK,GAAG;AACJN,UAAAA,eAAe,CAACO,QAAhB,CAAyBC,cAAzB,GAA0CV,mBAAmB,CAACW,IAApB,GAC1CX,mBAAmB,CAACY,IADsB,GAE1CZ,mBAAmB,CAACa,YAFsB,GAG1Cb,mBAAmB,CAACc,KAHsB,GAI1Cd,mBAAmB,CAACe,KAJpB;AAMA,eAAKR,KAAL,GAAY,CAAZ;AACA,cAAMS,kBAAkB,GAAG,KAAKC,SAAL,CAAeC,YAAf,CAA4Bf,QAA5B,CAA3B;AACA,eAAKgB,IAAL,CAAUC,EAAV,CAAa,OAAb,EAAsB,MAAM;AACxB;AACA,cAAE,KAAKb,KAAP;AACAS,YAAAA,kBAAkB,CAACK,MAAnB,GAA4B,KAAKd,KAAL,CAAWe,QAAX,EAA5B;AACH,WAJD;AAKH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA1B+B,O","sourcesContent":["import { _decorator, Component, EPhysics2DDrawFlags, Node, PhysicsSystem2D, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Game')\nexport class Game extends Component {\n    public score:number = 0;\n\n    @property(Node)\n    public hero:Node;\n    @property(Node)\n    public scoreNode:Node;\n\n    start() {\n        PhysicsSystem2D.instance.debugDrawFlags = EPhysics2DDrawFlags.Aabb |\n        EPhysics2DDrawFlags.Pair |\n        EPhysics2DDrawFlags.CenterOfMass |\n        EPhysics2DDrawFlags.Joint |\n        EPhysics2DDrawFlags.Shape;\n    \n        this.score= 0;\n        const scoreNodeComponent = this.scoreNode.getComponent(RichText);\n        this.hero.on('score', () => {\n            //audioEngine.play(this.sound);\n            ++this.score;\n            scoreNodeComponent.string = this.score.toString();\n        });\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}