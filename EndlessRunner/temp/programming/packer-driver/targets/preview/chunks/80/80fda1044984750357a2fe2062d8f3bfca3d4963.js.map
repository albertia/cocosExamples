{"version":3,"sources":["file:///Users/alex/git/cocos/EndlessRunner/assets/scripts/PlatformGenerator.ts"],"names":["_decorator","Component","Prefab","instantiate","Vec3","randomRangeInt","Platform","Diamond","ccclass","property","PlatformGenerator","timer","platformIndex","platforms","start","maxPlatformsInArray","createPlatform","generateAtHeightMin","generateAtHeightMax","update","deltaTime","generateEvery","x","y","tiles","length","platform","getComponent","createPosition","tilesCount","platformSpeed","movementSpeed","init","node","addChild","position","i","percentToGenerateDiamondsInEachTile","tile","children","diamond","diamondSpeed","totalHeight"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, Vec3, randomRangeInt, Sprite, UITransform } from 'cc';\nimport { Platform } from './Platform';\nimport { Diamond } from './Diamond';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PlatformGenerator')\nexport class PlatformGenerator extends Component {\n    @property(Prefab)\n    public platform = null;\n    @property(Prefab)\n    public diamond = null;\n    @property\n    public generateEvery:number = 1;\n    @property\n    public generateAtDistance:number = 200;\n    @property\n    public generateAtHeightMin:number = -100;\n    @property\n    public generateAtHeightMax:number = 100;\n    @property\n    public maxPlatformsInArray:number = 6;\n    @property\n    public percentToGenerateDiamondsInEachTile:number = 50;\n    @property\n    public movementSpeed:number = 150;\n\n\n    private timer:number = 1;\n    private platformIndex:number = 0;\n    public platforms:Array<Node> = [];\n\n\n    start() {\n        if (this.maxPlatformsInArray < 4) {\n            this.maxPlatformsInArray = 4;\n        }\n        this.createPlatform(0,0,3);\n        this.createPlatform(300,randomRangeInt(this.generateAtHeightMin, this.generateAtHeightMax), 4);\n        this.createPlatform(600,randomRangeInt(this.generateAtHeightMin, this.generateAtHeightMax), randomRangeInt(3,5));\n    }\n\n    update(deltaTime: number) {\n        this.timer -= deltaTime;\n        if (this.timer < 0) {\n            this.timer = this.generateEvery;\n            this.createPlatform(900,randomRangeInt(this.generateAtHeightMin, this.generateAtHeightMax),randomRangeInt(4,6));    \n        }\n    }\n\n    createPlatform(x:number, y:number, tiles:number) {\n        if (this.platforms.length < this.maxPlatformsInArray) {\n            const platform = instantiate(this.platform);\n            platform.getComponent(Platform).createPosition = new Vec3(x,y,0)\n            platform.getComponent(Platform).tilesCount = tiles\n            platform.getComponent(Platform).platformSpeed = this.movementSpeed\n            platform.getComponent(Platform).init()\n            this.node.addChild(platform);\n            this.platforms[this.platformIndex] = platform;\n        } else {\n            this.platforms[this.platformIndex].position = new Vec3(x,y,0);\n        }\n\n        for (var i = 0; i < this.platforms[this.platformIndex].getComponent(Platform).tilesCount; ++i) {\n            if (randomRangeInt(0,100) > this.percentToGenerateDiamondsInEachTile) {\n                var tile = this.platforms[this.platformIndex].getComponent(Platform).node.children[i];\n                const diamond = instantiate(this.diamond);\n                diamond.getComponent(Diamond).diamondSpeed = this.movementSpeed\n                diamond.getComponent(Diamond).createPosition = new Vec3(x + tile.position.x,\n                                                                        y + tile.position.y + this.platforms[this.platformIndex].getComponent(Platform).totalHeight,\n                                                                        0);\n                diamond.getComponent(Diamond).init();\n                this.node.addChild(diamond);\n            }\n        }\n\n        this.platformIndex = (1+this.platformIndex) % this.maxPlatformsInArray;\n    }\n}\n\n"]}