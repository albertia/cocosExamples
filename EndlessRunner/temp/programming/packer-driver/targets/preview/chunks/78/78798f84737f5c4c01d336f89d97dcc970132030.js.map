{"version":3,"sources":["file:///Users/alex/git/cocos/EndlessRunner/assets/scripts/Platform.ts"],"names":["_decorator","Component","Vec3","Prefab","instantiate","Sprite","UITransform","BoxCollider2D","ccclass","property","Platform","platformSpeed","totalWidth","tileWidth","totalHeight","start","update","deltaTime","node","position","x","y","init","createPosition","i","tilesCount","tile","addChild","getComponent","width","height","collider","size","offset","name","apply"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,a,OAAAA,a;;;;;;;;;OAChF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;0BAGjBU,Q,WADZF,OAAO,CAAC,UAAD,C,UAEHC,QAAQ,CAACN,MAAD,C,2BAFb,MACaO,QADb,SAC8BT,SAD9B,CACwC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAQ7BU,aAR6B,GAQN,GARM;AAAA,eAS7BC,UAT6B,GAST,CATS;AAAA,eAU7BC,SAV6B,GAUV,CAVU;AAAA,eAW7BC,WAX6B,GAWR,CAXQ;AAAA;;AAapCC,QAAAA,KAAK,GAAG,CACP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKC,IAAL,CAAUC,QAAV,GAAqB,IAAIjB,IAAJ,CAAS,KAAKgB,IAAL,CAAUC,QAAV,CAAmBC,CAAnB,GAAqBH,SAAS,GAAC,KAAKN,aAA7C,EAA4D,KAAKO,IAAL,CAAUC,QAAV,CAAmBE,CAA/E,EAAiF,CAAjF,CAArB;AACH;;AAEKC,QAAAA,IAAI,GAAG;AACT,eAAKJ,IAAL,CAAUC,QAAV,GAAqB,KAAKI,cAA1B;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,UAAzB,EAAqC,EAAED,CAAvC,EAA0C;AACtC,gBAAME,IAAI,GAAGtB,WAAW,CAAC,KAAKsB,IAAN,CAAxB;AACA,iBAAKR,IAAL,CAAUS,QAAV,CAAmBD,IAAnB;AACA,iBAAKb,SAAL,GAAiBa,IAAI,CAACE,YAAL,CAAkBvB,MAAlB,EAA0Ba,IAA1B,CAA+BU,YAA/B,CAA4CtB,WAA5C,EAAyDuB,KAA1E;AACA,iBAAKf,WAAL,GAAmBY,IAAI,CAACE,YAAL,CAAkBvB,MAAlB,EAA0Ba,IAA1B,CAA+BU,YAA/B,CAA4CtB,WAA5C,EAAyDwB,MAA5E;AACAJ,YAAAA,IAAI,CAACP,QAAL,GAAgB,IAAIjB,IAAJ,CAASsB,CAAC,GAAG,KAAKX,SAAlB,EAA6B,CAA7B,EAAgC,CAAhC,CAAhB;AACA,iBAAKD,UAAL,IAAmB,KAAKC,SAAxB;AACH;;AAED,cAAIkB,QAAQ,GAAG,KAAKb,IAAL,CAAUU,YAAV,CAAuBrB,aAAvB,CAAf;AACAwB,UAAAA,QAAQ,CAACC,IAAT,CAAcZ,CAAd,GAAkB,KAAKR,UAAvB;AACAmB,UAAAA,QAAQ,CAACC,IAAT,CAAcX,CAAd,GAAkB,KAAKP,WAAvB;AACAiB,UAAAA,QAAQ,CAACE,MAAT,CAAgBb,CAAhB,GAAoB,KAAKR,UAAL,GAAgB,CAAhB,GAAoB,KAAKC,SAAL,GAAe,CAAvD;AACAkB,UAAAA,QAAQ,CAACG,IAAT,GAAgB,UAAhB;AACAH,UAAAA,QAAQ,CAACI,KAAT;AACH;;AArCmC,O;;;;;iBAEtB,I;;yFACb1B,Q;;;;;iBAC4B,IAAIP,IAAJ,CAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,C;;qFAC5BO,Q;;;;;iBAC0B,C","sourcesContent":["import { _decorator, Component, Node, Vec3, Prefab, instantiate, Sprite, UITransform, BoxCollider2D} from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Platform')\nexport class Platform extends Component {\n    @property(Prefab)\n    public tile = null;\n    @property\n    public createPosition:Vec3 = new Vec3(0.0, 0.0, 0.0);\n    @property\n    public tilesCount:number = 3;\n\n    public platformSpeed:number = 150;\n    public totalWidth:number = 0;\n    public tileWidth:number = 0;\n    public totalHeight:number = 0;\n\n    start() {\n    }\n\n    update(deltaTime: number) {\n        this.node.position = new Vec3(this.node.position.x-deltaTime*this.platformSpeed, this.node.position.y,0); \n    }\n\n   public init() {\n        this.node.position = this.createPosition;\n        for (let i = 0; i < this.tilesCount; ++i)Â {\n            const tile = instantiate(this.tile);\n            this.node.addChild(tile);\n            this.tileWidth = tile.getComponent(Sprite).node.getComponent(UITransform).width;\n            this.totalHeight = tile.getComponent(Sprite).node.getComponent(UITransform).height;\n            tile.position = new Vec3(i * this.tileWidth, 0, 0)\n            this.totalWidth += this.tileWidth;\n        }\n\n        var collider = this.node.getComponent(BoxCollider2D);\n        collider.size.x = this.totalWidth;\n        collider.size.y = this.totalHeight;\n        collider.offset.x = this.totalWidth/2 - this.tileWidth/2;\n        collider.name = 'platform'\n        collider.apply();\n    }\n}\n\n"]}