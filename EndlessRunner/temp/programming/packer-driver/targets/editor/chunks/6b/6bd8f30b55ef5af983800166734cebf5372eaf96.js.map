{"version":3,"sources":["file:///Users/alex/git/cocos/EndlessRunner/assets/scripts/Diamond.ts"],"names":["_decorator","Component","Vec3","Sprite","UITransform","BoxCollider2D","ccclass","property","Diamond","diamondSpeed","totalWidth","start","node","getComponent","width","collider","name","sensor","apply","update","deltaTime","position","x","y","setTimeout","destroy","bind","init","createPosition"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAA2BC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,a,OAAAA,a;;;;;;;;;OAChF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;yBAGjBQ,O,WADZF,OAAO,CAAC,SAAD,C,2BAAR,MACaE,OADb,SAC6BP,SAD7B,CACuC;AAAA;AAAA;;AAAA;;AAAA,eAI5BQ,YAJ4B,GAIN,GAJM;AAAA,eAM5BC,UAN4B,GAMR,CANQ;AAAA;;AAQnCC,QAAAA,KAAK,GAAG;AACJ,eAAKD,UAAL,GAAkB,KAAKE,IAAL,CAAUC,YAAV,CAAuBV,MAAvB,EAA+BS,IAA/B,CAAoCC,YAApC,CAAiDT,WAAjD,EAA8DU,KAAhF;AACA,cAAIC,QAAQ,GAAG,KAAKH,IAAL,CAAUC,YAAV,CAAuBR,aAAvB,CAAf;AACAU,UAAAA,QAAQ,CAACC,IAAT,GAAgB,SAAhB;AACAD,UAAAA,QAAQ,CAACE,MAAT,GAAkB,IAAlB;AACAF,UAAAA,QAAQ,CAACG,KAAT;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKR,IAAL,CAAUS,QAAV,GAAqB,IAAInB,IAAJ,CAAS,KAAKU,IAAL,CAAUS,QAAV,CAAmBC,CAAnB,GAAqBF,SAAS,GAAC,KAAKX,YAA7C,EAA2D,KAAKG,IAAL,CAAUS,QAAV,CAAmBE,CAA9E,EAAgF,CAAhF,CAArB;;AACA,cAAI,KAAKX,IAAL,CAAUS,QAAV,CAAmBC,CAAnB,GAAuB,CAAC,KAAKb,YAAN,GAAmB,CAA9C,EAAiD;AAC7C;AACAe,YAAAA,UAAU,CAAC,YAAY;AACnB,mBAAKZ,IAAL,CAAUa,OAAV;AACD,aAFQ,CAEPC,IAFO,CAEF,IAFE,CAAD,EAEM,CAFN,CAAV;AAGH;AACJ;;AAEKC,QAAAA,IAAI,GAAG;AACT,eAAKf,IAAL,CAAUS,QAAV,GAAqB,KAAKO,cAA1B;AACH;;AA5BkC,O,iFAClCrB,Q;;;;;iBAC4B,IAAIL,IAAJ,CAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,C","sourcesContent":["import { _decorator, Component, Node, Vec3, Prefab, instantiate, Sprite, UITransform, BoxCollider2D} from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Diamond')\nexport class Diamond extends Component {\n    @property\n    public createPosition:Vec3 = new Vec3(0.0, 0.0, 0.0);\n\n    public diamondSpeed:number = 150;\n\n    public totalWidth:number = 0;\n\n    start() {\n        this.totalWidth = this.node.getComponent(Sprite).node.getComponent(UITransform).width;\n        var collider = this.node.getComponent(BoxCollider2D);\n        collider.name = 'diamond'\n        collider.sensor = true;\n        collider.apply();\n    }\n\n    update(deltaTime: number) {\n        this.node.position = new Vec3(this.node.position.x-deltaTime*this.diamondSpeed, this.node.position.y,0); \n        if (this.node.position.x < -this.diamondSpeed*4) {\n            // Destroy after 4 seconds after going through the center of the screen\n            setTimeout(function () {\n                this.node.destroy();\n              }.bind(this), 1); \n        }\n    }\n\n   public init() {\n        this.node.position = this.createPosition;\n    }\n}\n\n"]}